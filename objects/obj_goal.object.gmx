<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mushroomman</spriteName>
  <solid>-1</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.wallslide_flag = false;
  
MAX_SPEED = 0.01;
MIN_SPEED = -1 * MAX_SPEED;
MAX_DIST = 10;

move_to_spawn = false;

view_visible[0] = true;
view_visible[1] = false;
seeking_flag=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
mid_x = (x + 10);
mid_y = (y + 10);

//spawning
if (keyboard_check(vk_shift) &amp;&amp; seeking_flag==false &amp;&amp; (place_meeting(x,y+3, obj_spawn) or place_meeting(x,y+3, obj_dirt_spawn) or place_meeting(x,y+3, obj_dirt_slant_spawn)) &amp;&amp; !place_meeting(x, y, obj_collision))
{
  instance_change(obj_mushroomman, true);
}


//spores

for (i = 0; i &lt; global.NUM_SPORES; i += 1)
{
  spore = global.spores[i];
  spore.hspeed += global.RANDOM_SCALE * ((2 * random(1))-1);
  spore.vspeed += global.RANDOM_SCALE * ((2 * random(1))-1);
  spore.hspeed += global.COHESION_SCALE * (mid_x - spore.x);
  spore.vspeed += global.COHESION_SCALE * (mid_y - spore.y);
  dist = abs(point_distance(mid_x, mid_y, spore.x, spore.y));
  if (abs(dist) &gt; MAX_DIST)
  {
    scaling = dist - MAX_DIST;
    xPart = (mid_x - spore.x) / dist;
    yPart = (mid_y - spore.y) / dist;
    spore.x += xPart * scaling;
    spore.y += yPart * scaling;
  }
}

hspeed = min(MAX_SPEED, max(MIN_SPEED, hspeed));
vspeed = min(MAX_SPEED, max(MIN_SPEED, vspeed));


//movement
if (keyboard_check(vk_up)) 
{
  vspeed -= 6;
  seeking_flag=false;
  obj_goal.solid = true;
  move_to_spawn = false;
}

if (keyboard_check(vk_down)) 
{
  vspeed += 5;
  seeking_flag=false;
  obj_goal.solid = true;
  move_to_spawn = false;
}

if (keyboard_check(vk_right)) 
{
  hspeed += 5;
  seeking_flag=false;
  obj_goal.solid = true;
  move_to_spawn = false;
}

if (keyboard_check(vk_left)) 
{
  hspeed -= 5;
  seeking_flag=false;
  obj_goal.solid = true;
  move_to_spawn = false;
}

if (keyboard_check_pressed(vk_tab))
{
  seeking_flag=true;
  move_to_spawn = true;
  obj_goal.solid = false;
}

if x == obj_lastspawn.x &amp;&amp; y == obj_lastspawn.y
{
  seeking_flag=false;
}

epsilon = 0.0001;

if (move_to_spawn)
{
  move_towards_point(obj_lastspawn.x, obj_lastspawn.y, 10);
  if ((abs(x - obj_lastspawn.x) &lt; epsilon) &amp;&amp; (abs(y - obj_lastspawn.y) &lt; epsilon))
  {
    solid = true;
  }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
